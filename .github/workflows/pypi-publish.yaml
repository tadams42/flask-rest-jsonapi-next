# This workflow will upload a Python Package using Twine when a release is created
# For more information see:
#   - https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries
#   - https://docs.pypi.org/trusted-publishers/using-a-publisher/
name: Build and release Python Package


on:
  release:
    types: [published]


permissions:
  contents: read


jobs:
  pypi-publish:
    runs-on: ubuntu-latest
    name: upload release to PyPI
    environment: release
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    env:
      UV_PYTHON: '3.13'

    steps:
    - uses: actions/checkout@v4

    - name: Set up 🐍
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: "**/pyproject.toml"

    - name: 🏗 Build package 🚧
      # run: python -m build
      run: uv build

    - name: 🚚 Publish package distributions to PyPI 🚀
      uses: pypa/gh-action-pypi-publish@release/v1
